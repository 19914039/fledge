#!/usr/bin/env bash

# FIXME:
psql  -U foglamp  -c "DELETE FROM foglamp.readings;"    > /dev/null 2>&1
psql  -U foglamp  -c "DELETE FROM foglamp.omf_created_objects;"    > /dev/null 2>&1


# Reads configuration setting
source ${SUITE_BASEDIR}/suite.cfg

# Configures FogLAMP with the required settings
# Enables the OCS plugin
curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/schedule/${SCHEDULE_ID_OCS_PLUGIN} -d '{ "enabled" : true }' &>>  ${RESULT_DIR}/$TEST_NAME.temp
# FIXME:
sleep 70

curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/SEND_PR_4/tenant_id -d '{ "value" : "'${OCS_TENANT}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp
curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/SEND_PR_4/client_id -d '{ "value" : "'${OCS_CLIENT_ID}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp
curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/SEND_PR_4/client_secret -d '{ "value" : "'${OCS_CLIENT_SECRET}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp
curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/SEND_PR_4/namespace -d '{ "value" : "'${OCS_NAMESPACE}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp

curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/OCS_TYPES/type-id -d '{ "value" : "'${OCS_TYPE_ID}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp
curl -s -X PUT http://${FOGLAMP_SERVER}:${FOGLAMP_PORT}/foglamp/category/SEND_PR_4/producerToken -d '{ "value" : "'${OCS_TOKEN}'" }' &>>  ${RESULT_DIR}/$TEST_NAME.temp

# FIXME:
sleep 70

# Initializes OCS cleaning all the content of the defined OCS NameSpace
python3 $TEST_BASEDIR/python/ocs_clean_namespace.py $@              &>>  ${RESULT_DIR}/$TEST_NAME.temp
# Retrieves the list of the Streams to ensure it is empty
python3 $TEST_BASEDIR/python/ocs_read_streams_list.py $@
