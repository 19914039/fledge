#!/usr/bin/env bash

##--------------------------------------------------------------------
## Copyright (c) 2018 OSIsoft, LLC
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##--------------------------------------------------------------------


# @date: 2018-01-02
#
# Bash Script to manage certificates
# The first implementation is to create a new self-signed SSL Certificate
#
# USAGE: this command will ask for the certificate name and number in days it will expire
# $ ./certificates foglamp 365
#
# Create a certificate key.
# Create the certificate signing request (CSR) which contains details such as the domain name and address details.
# Sign the certificate
# Install the certificate and key in the application.

USAGE="Usage: ./`basename ${0}` CERTIFICATE_NAME EXPIRATION_DAYS"


if [ "${FOGLAMP_ROOT}" = "" ]; then
  FOGLAMP_ROOT=/usr/local/foglamp
fi

# include logger script
. ${FOGLAMP_ROOT}/scripts/common/write_log.sh

if [[ ! -d "${FOGLAMP_ROOT}" ]]; then
  logger "Could not find the write_log script."
  exit 1
fi

# Logger wrapper
selfssl_log() {
  write_log "foglamp.script.core.selfssl" "$1" "$2" "$3"
}

if [ -z $1 ]; then
  selfssl_log "err" "${USAGE}" "logonly"
  exit 1
fi

if [ -z $2 ]; then
  selfssl_log "err" "${USAGE}" "logonly"
  exit 1
fi

if ! [ -x "$(type -P openssl)" ]; then
  selfssl_log "err" "script requires openssl" "logonly"
  selfssl_log "err" "For Debian and friends, get it with 'apt-get install openssl'"  "logonly"
  exit 1
fi

# Check ENV VARS and decide the directory to place the certificates

if [ ! -z ${FOGLAMP_DATA+x} ]; then
  SSL_LOCATION="${FOGLAMP_DATA}"
else
  if [ ! -z ${FOGLAMP_ROOT+x} ]; then
    SSL_LOCATION="${FOGLAMP_ROOT}"
  else
    SSL_LOCATION="/usr/local/foglamp"
  fi
fi

if [ ! -d "${SSL_LOCATION}" ]; then
  selfssl_log "err" "Could not find the directory ${SSL_LOCATION} to put SSL certificates." "logonly"
  exit 1
fi

mkdir -p ${SSL_LOCATION}/etc/certs
SSL_CERTS_PATH=${SSL_LOCATION}/etc/certs

if [ ! -d "${SSL_CERTS_PATH}" ]; then
  selfssl_log "err" "Could not create /etc/certs to put SSL certificates at ${SSL_LOCATION}" "logonly"
  exit 1
fi


SSL_NAME=$1
SSL_EXPIRATION_DAYS=$2

# Change to your company details
country=US
state=California
# locality=
organization=OSIsoft
# organizational_unit=
common_name=FogLAMP
email=info@dianomic.com

selfssl_log "info"  "Creating a self signed SSL certificate ..."  "logonly"

# Add more info /C=$country/ST=$state/L=$locality/O=$organization/OU=$organizational_unit/CN=$common_name/emailAddress=$email
SUBJ="/C=$country/ST=$state/O=$organization/CN=$common_name/emailAddress=$email"

openssl genrsa -passout pass:x -out ${SSL_CERTS_PATH}/server.pass.key 2048 2> /dev/null
openssl rsa -passin pass:x -in ${SSL_CERTS_PATH}/server.pass.key -out ${SSL_CERTS_PATH}/${SSL_NAME}.key  2> /dev/null
rm ${SSL_CERTS_PATH}/server.pass.key 2>&1 | logger &
openssl req -new -key ${SSL_CERTS_PATH}/${SSL_NAME}.key -subj ${SUBJ} -out ${SSL_CERTS_PATH}/${SSL_NAME}.csr 2> /dev/null
openssl x509 -req -sha256 -days ${SSL_EXPIRATION_DAYS} -in ${SSL_CERTS_PATH}/${SSL_NAME}.csr -signkey ${SSL_CERTS_PATH}/${SSL_NAME}.key -out ${SSL_CERTS_PATH}/${SSL_NAME}.cert 2> /dev/null

# The ${SSL_NAME}.cert file is the certificate suitable for use along with the ${SSL_NAME}.key private key.
# Put these in ${FOGLAMP_DATA}/etc/certs, ${FOGLAMP_ROOT}/etc/certs or /usr/local/foglamp/etc/certs
# Make directory to place SSL Certificate, if it doesn't exist


# Move SSL Certificate & Key to defined path

if [ ! -f ${SSL_CERTS_PATH}/${SSL_NAME}.key ]; then
  selfssl_log "err" "Could not create SSL certificate ${SSL_NAME} key at ${SSL_CERTS_PATH}" "logonly"
  exit 1
fi

if [ ! -f ${SSL_CERTS_PATH}/${SSL_NAME}.cert ]; then
  selfssl_log "err" "Could not create SSL certificate ${SSL_NAME} at ${SSL_CERTS_PATH}" "logonly"
  exit 1
fi

# what about CSR

selfssl_log "info" "Certificates created successfully, and placed in ${SSL_CERTS_PATH}" "logonly"
