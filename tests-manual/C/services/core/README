=================================
ConfigurationManger class tests.
=================================

Steps:

1) make sure Fledge storage layer is running on port 8080

	if not, set FLEDGE_DATA to "." and start it.
	# export FLEDGE_DATA=.

	Set FLEDGE_ROOT if needed
	# export FLEDGE_ROOT=/some/path

	Make we have a Fledge SQlite3 database:
	# export DEFAULT_SQLITE_DB_FILE=/some_path/fledge.db

	Start storage service
	# $FLEDGE_ROOT/services/storage	

2) delete category "testcategory" and its child categories

	# curl -X DELETE -d '{"where":{"column":"key","condition":"=","value":"testcategory"}}' 'http://127.0.0.1:8080/storage/table/configuration'
	# curl -X DELETE -d '{"where":{"column":"parent","condition":"=","value":"testcategory"}}' 'http://127.0.0.1:8080/storage/table/category_children'
	Check
	# curl -X GET 'http://127.0.0.1:8080/storage/table/configuration?key=testcategory'
	# curl -X GET 'http://127.0.0.1:8080/storage/table/category_children?parent=testcategory'

3) Make / Run tests

	# mkdir build
	# cd build
	# cmake ..
	# make
	# ./RunTests

=====================================================================
Integration tests for classes:
 - Fledge Core C++
 - ConfigurationManager C++ (which needs a running Storage Service)
=====================================================================


Steps:

1) Set FLEDGE_ROOT
2) ./testRunner.sh
3) Manually kill Fledge Core and Storage Service processes (this is required at the time being)


